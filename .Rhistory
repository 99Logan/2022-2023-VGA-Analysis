add = "reg.line",
conf.int = TRUE,
cor.coef = TRUE,
cor.method = "pearson",
xlab = "Race",
ylab = "Vertical Scaled Score")
knitr::opts_chunk$set(echo = TRUE)
VGAdata <- read_csv("C:/Users/Logan/OneDrive/Desktop/VGA Analysis/Raw VGA Scores/Winter VGA Scores.csv")
library(readr)
library(data.table)
library(dplyr)
library(ggpubr)
VGAdata <- read_csv("C:/Users/Logan/OneDrive/Desktop/VGA Analysis/Raw VGA Scores/Winter VGA Scores.csv")
View(VGAdata)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(data.table)
library(dplyr)
library(ggpubr)
VGAdata <- read_csv("C:/Users/Logan/OneDrive/Desktop/VGA Analysis/Raw VGA Scores/Winter VGA Scores.csv")
View(VGAdata)
head(x = VGAdata)
colnames(x = VGAdata)
VGAdata[ , c("Filler...7", "Filler...11", "Filler...22", "Filler...25", "Filler...34", "Filler...35", "Filler...37", "Filler...40", "Filler...41", "Filler...42", "Filler...47", "Filler...48", "Filler...49", "Filler...50", "Filler...51", "Filler...52", "Filler...53", "Filler...54", "Filler...55", "Filler...57", "Filler...59", "Filler...62", "Filler...63", "Filler...64", "Filler...65", "Filler...66", "Filler...67", "Filler...71", "Filler...73", "Filler...74", "Filler...76", "Filler...86", "Filler...91", "Filler...93", "Filler...95", "Filler...96", "Filler...97", "Filler...98", "Filler...99", "Filler...100", "Filler...101", "Filler...111", "Filler...113", "Filler...115", "Filler...116", "Filler...117", "Filler...126", "Filler...127", "Filler...128", "Filler...152", "Filler...153", "Filler...154", "Filler...159", "Filler...162")] <- list(NULL)
colnames(x = VGAdata)
VGAdata[ , c("Z indicates End of Record", "STA-B", "Code VTLN", "Code TLN", "Code TFN", "Performance Level", "Reporting Cat Scaled Score 1",
"Reporting Cat Scaled Score 2", "Reporting Cat Scaled Score 3", "Reporting Cat Scaled Score 4", "Reporting Cat Scaled Score 5",
"Reporting Cat Scaled Score 6", "Reporting Cat Scaled Score 7", "Test Scaled Score", "Testing Status", "Z-Code-G", "Z-Code-F", "Z-Code-E", "SLIFE",
"Recovery", "Retest", "Recently Arrived EL", "X-Code-D", "X-Code-C", "X-Code-B", "Foster Care", "Local Use Data - Student", "Virtual Virginia",
"Temp Condition", "Resident Division", "Transfer", "SOA Adjustment - EL", "Middle Initial", "Group Code", "Student Test Day", "Form", "Level", "Core/Admin", "Year of Standard",              "Test Administration-Time of Year", "Test Administration-Year", "Sequence Number", "Document ID", "Batch Number")] <- list(NULL)
colnames(x = VGAdata)
VGAdata["Disability Status"][is.na(VGAdata["Disability Status"])] <- 0
View(VGAdata)
VGAdata["Primary Nighttime Residence Code"][is.na(VGAdata["Primary Nighttime Residence Code"])] <- 0
View(VGAdata)
VGAdata["Formerly EL"][is.na(VGAdata["Formerly EL"])] <- 0
VGAdata$"Formerly EL"[VGAdata$"Formerly EL" > 0] <- 1
View(VGAdata)
EL_Student <- VGAdata[VGAdata$"EL Overall Proficiency Level" > 9, ]
View(EL_Student)
write.csv(EL_Student, "EL_Student.csv")
VGAdata[ , c("EL Overall Proficiency Level")] <- list(NULL)
View(VGAdata)
VGAdata["Stack Number"][is.na(VGAdata["Stack Number"])] <- 0
View(VGAdata)
VGAdata["Revision"][VGAdata["Revision"] == 0] <- 1
VGAdata["Revision"][is.na(VGAdata["Revision"])] <- 0
View(VGAdata)
VGAdata["Items Blank &/or Mult Marked"][VGAdata["Items Blank &/or Mult Marked"] == 0] <- 1
VGAdata["Items Blank &/or Mult Marked"][is.na(VGAdata["Items Blank &/or Mult Marked"])] <- 0
View(VGAdata)
VGAdata["Test Name"][VGAdata["Test Name"] == "4 Math Growth"] <- "4 Math Growth CAT"
VGAdata["Test Name"][VGAdata["Test Name"] == "4 Read Growth"] <- "4 Read Growth CAT"
View(VGAdata)
VGAdata["Test Name"][VGAdata["Test Name"] == "3 Math Growth CAT"] <- "Math Growth CAT"
VGAdata["Test Name"][VGAdata["Test Name"] == "3 Read Growth CAT"] <- "Read Growth CAT"
VGAdata["Test Name"][VGAdata["Test Name"] == "4 Math Growth CAT"] <- "Math Growth CAT"
VGAdata["Test Name"][VGAdata["Test Name"] == "4 Read Growth CAT"] <- "Read Growth CAT"
VGAdata["Test Name"][VGAdata["Test Name"] == "5 Math Growth CAT"] <- "Math Growth CAT"
VGAdata["Test Name"][VGAdata["Test Name"] == "5 Read Growth CAT"] <- "Read Growth CAT"
View(VGAdata)
which(colSums(is.na(VGAdata)) > 0)
VGAdata["Student Number"][is.na(VGAdata["Student Number"])] <- 697550
VGAdata["Local Use Data -Test"][is.na(VGAdata["Local Use Data -Test"])] <- "SRI"
VGAdata["Online Test"][is.na(VGAdata["Online Test"])] <- "N"
VGAdata[is.na(VGAdata)] <- "N"
write.csv(VGAdata, "NewestVGAdata.csv")
Disability_Status <- VGAdata[VGAdata$"Disability Status" > 0, ]
View(Disability_Status)
write.csv(Disability_Status, "Disability_Status.csv")
unique(Disability_Status$"Disability Status")
unique(Disability_Status$"Group Name")
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA SteenK"] <- "Steen"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI SteenK"] <- "Steen"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA JohnsonW"] <- "Johnson"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI JohnsonW"] <- "Johnson"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA BojarczukC"] <- "Bojarczuk"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI BojarczukC"] <- "Bojarczuk"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA JardelR"] <- "Jardel"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI JardelR"] <- "Jardel"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA PerryS"] <- "Perry"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI PerryS"] <- "Perry"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA FlisJ"] <- "Flis"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA ThorpK"] <- "Thorp"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI ThorpK"] <- "Thorp"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA GrantB"] <- "Grant"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI GrantB"] <- "Grant"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA ConlanS"] <- "Conlan"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI ConlanS"] <- "Conlan"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA PeoplesN"] <- "Peoples"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI PeoplesN"] <- "Peoples"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA ThriftM"] <- "Thrift"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI ThriftM"] <- "Thrift"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA FickT"] <- "Fick"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI FickT"] <- "Fick"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA MozingoS"] <- "Mozingo"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI MozingoS"] <- "Mozingo"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA RimkusJ"] <- "Rimkus"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI RimkusJ"] <- "Rimkus"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA WittM"] <- "Witt"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA CampbellS"] <- "Campbell"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI CampbellS"] <- "Campbell"
View(Disability_Status)
colnames(x = Disability_Status)
which(colSums(is.na(EL_Level)) > 0)
EL_Level[ , c("Division Name", "Division Code", "School Name", "School Code", "Local Use Data -Test", "Test Administration-Time of Year",
"Test Administration-Year", "Level", "Form", "Subject Code", "Core/Admin", "Year of Standard", "UIN", "Online Test", "UUID",
"Z indicates End of Record")] <- list(NULL)
View(EL_Level)
which(colSums(is.na(Disability_Status)) > 0)
Disability_Status[ , c("Division Name", "Division Code", "School Name", "School Code", "Local Use Data -Test", "Test Administration-Time of Year",
"Test Administration-Year", "Level", "Form", "Subject Code", "Core/Admin", "Year of Standard", "UIN", "Online Test", "UUID",
"Z indicates End of Record")] <- list(NULL)
View(Disability_Status)
write.csv(Disability_Status, "Disability_Status.csv")
ggscatter(Disability_Status,
x = "Disability Status",
y = "Vertical Scaled Score",
add = "reg.line",
conf.int = TRUE,
cor.coef = TRUE,
cor.method = "pearson",
xlab = "Disability Status",
ylab = "Vertical Scaled Score")
ggscatter(VGAdata,
x = "Race",
y = "Vertical Scaled Score",
add = "reg.line",
conf.int = TRUE,
cor.coef = TRUE,
cor.method = "pearson",
xlab = "Race",
ylab = "Vertical Scaled Score")
source("~/.active-rstudio-document", echo=TRUE)
ggscatter(EL_Level,
x = "EL Overall Proficiency Level",
y = "Vertical Scaled Score",
add = "reg.line",
conf.int = TRUE,
cor.coef = TRUE,
cor.method = "pearson",
xlab = "ESL Proficiency Level",
ylab = "Vertical Scaled Score")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(data.table)
library(dplyr)
library(ggpubr)
VGAdata <- read_csv("C:/Users/Logan/OneDrive/Desktop/VGA Analysis/Raw VGA Scores/Winter VGA Scores.csv")
View(VGAdata)
head(x = VGAdata)
colnames(x = VGAdata)
VGAdata[ , c("Filler...7", "Filler...11", "Filler...22", "Filler...25", "Filler...34", "Filler...35", "Filler...37", "Filler...40", "Filler...41", "Filler...42", "Filler...47", "Filler...48", "Filler...49", "Filler...50", "Filler...51", "Filler...52", "Filler...53", "Filler...54", "Filler...55", "Filler...57", "Filler...59", "Filler...62", "Filler...63", "Filler...64", "Filler...65", "Filler...66", "Filler...67", "Filler...71", "Filler...73", "Filler...74", "Filler...76", "Filler...86", "Filler...91", "Filler...93", "Filler...95", "Filler...96", "Filler...97", "Filler...98", "Filler...99", "Filler...100", "Filler...101", "Filler...111", "Filler...113", "Filler...115", "Filler...116", "Filler...117", "Filler...126", "Filler...127", "Filler...128", "Filler...152", "Filler...153", "Filler...154", "Filler...159", "Filler...162")] <- list(NULL)
colnames(x = VGAdata)
VGAdata[ , c("Z indicates End of Record", "STA-B", "Code VTLN", "Code TLN", "Code TFN", "Performance Level", "Reporting Cat Scaled Score 1",
"Reporting Cat Scaled Score 2", "Reporting Cat Scaled Score 3", "Reporting Cat Scaled Score 4", "Reporting Cat Scaled Score 5",
"Reporting Cat Scaled Score 6", "Reporting Cat Scaled Score 7", "Test Scaled Score", "Testing Status", "Z-Code-G", "Z-Code-F", "Z-Code-E", "SLIFE",
"Recovery", "Retest", "Recently Arrived EL", "X-Code-D", "X-Code-C", "X-Code-B", "Foster Care", "Local Use Data - Student", "Virtual Virginia",
"Temp Condition", "Resident Division", "Transfer", "SOA Adjustment - EL", "Middle Initial", "Group Code", "Student Test Day", "Form", "Level", "Core/Admin", "Year of Standard",              "Test Administration-Time of Year", "Test Administration-Year", "Sequence Number", "Document ID", "Batch Number")] <- list(NULL)
colnames(x = VGAdata)
VGAdata["Disability Status"][is.na(VGAdata["Disability Status"])] <- 0
View(VGAdata)
VGAdata["Primary Nighttime Residence Code"][is.na(VGAdata["Primary Nighttime Residence Code"])] <- 0
View(VGAdata)
VGAdata["Formerly EL"][is.na(VGAdata["Formerly EL"])] <- 0
VGAdata$"Formerly EL"[VGAdata$"Formerly EL" > 0] <- 1
View(VGAdata)
EL_Student <- VGAdata[VGAdata$"EL Overall Proficiency Level" > 9, ]
View(EL_Student)
write.csv(EL_Student, "EL_Student.csv")
VGAdata[ , c("EL Overall Proficiency Level")] <- list(NULL)
View(VGAdata)
VGAdata["Stack Number"][is.na(VGAdata["Stack Number"])] <- 0
View(VGAdata)
VGAdata["Revision"][VGAdata["Revision"] == 0] <- 1
VGAdata["Revision"][is.na(VGAdata["Revision"])] <- 0
View(VGAdata)
VGAdata["Items Blank &/or Mult Marked"][VGAdata["Items Blank &/or Mult Marked"] == 0] <- 1
VGAdata["Items Blank &/or Mult Marked"][is.na(VGAdata["Items Blank &/or Mult Marked"])] <- 0
View(VGAdata)
VGAdata["Test Name"][VGAdata["Test Name"] == "4 Math Growth"] <- "4 Math Growth CAT"
VGAdata["Test Name"][VGAdata["Test Name"] == "4 Read Growth"] <- "4 Read Growth CAT"
View(VGAdata)
VGAdata["Test Name"][VGAdata["Test Name"] == "3 Math Growth CAT"] <- "Math Growth CAT"
VGAdata["Test Name"][VGAdata["Test Name"] == "3 Read Growth CAT"] <- "Read Growth CAT"
VGAdata["Test Name"][VGAdata["Test Name"] == "4 Math Growth CAT"] <- "Math Growth CAT"
VGAdata["Test Name"][VGAdata["Test Name"] == "4 Read Growth CAT"] <- "Read Growth CAT"
VGAdata["Test Name"][VGAdata["Test Name"] == "5 Math Growth CAT"] <- "Math Growth CAT"
VGAdata["Test Name"][VGAdata["Test Name"] == "5 Read Growth CAT"] <- "Read Growth CAT"
View(VGAdata)
which(colSums(is.na(VGAdata)) > 0)
VGAdata["Student Number"][is.na(VGAdata["Student Number"])] <- 697550
VGAdata["Local Use Data -Test"][is.na(VGAdata["Local Use Data -Test"])] <- "SRI"
VGAdata["Online Test"][is.na(VGAdata["Online Test"])] <- "N"
VGAdata[is.na(VGAdata)] <- "N"
write.csv(VGAdata, "NewestVGAdata.csv")
library(readr)
FormerlyEL <- read_csv("Useable FIles/FormerlyEL.csv")
View(FormerlyEL)
colnames(x = FormerlyEL)
which(colSums(is.na(FormerlyEL)) > 0)
FormerlyEL[ , c("Primary Nighttime Residence Code", "EL Overall Proficiency Level", "Stack Number", "Batch Number",
"Sequence Number", "Document ID", "Revision", "Items Blank &/or Mult Marked")] <- list(NULL)
View(FormerlyEL)
FormerlyEL["Test Name"][FormerlyEL["Test Name"] == "3 Math Growth CAT"] <- "Math Growth CAT"
FormerlyEL["Test Name"][FormerlyEL["Test Name"] == "3 Read Growth CAT"] <- "Read Growth CAT"
FormerlyEL["Test Name"][FormerlyEL["Test Name"] == "4 Math Growth CAT"] <- "Math Growth CAT"
FormerlyEL["Test Name"][FormerlyEL["Test Name"] == "4 Read Growth CAT"] <- "Read Growth CAT"
FormerlyEL["Test Name"][FormerlyEL["Test Name"] == "5 Math Growth CAT"] <- "Math Growth CAT"
FormerlyEL["Test Name"][FormerlyEL["Test Name"] == "5 Read Growth CAT"] <- "Read Growth CAT"
View(FormerlyEL)
FormerlyEL[ , c("Local Use Data -Test", "Test Administration-Time of Year", "Test Administration-Year", "Stack Number", "Batch Number", "Sequence Number", "Document ID", "Level", "Form", "Subject Code", "Core/Admin", "Year of Standard", "UIN", "UUID", "Z indicates End of Record")] <- list(NULL)
View(FormerlyEL)
write.csv(FormerlyEL, "NewestFormerlyEL.csv")
EL_Level <- read_csv("Useable FIles/EL_Level.csv")
View(EL_Level)
colnames(x = EL_Level)
which(colSums(is.na(EL_Level)) > 0)
EL_Level[ , c("Primary Nighttime Residence Code", "Stack Number", "Batch Number", "Sequence Number",
"Document ID", "Revision", "Formerly EL", "Items Blank &/or Mult Marked")] <- list(NULL)
View(EL_Level)
EL_Level["Test Name"][EL_Level["Test Name"] == "3 Math Growth CAT"] <- "Math Growth CAT"
EL_Level["Test Name"][EL_Level["Test Name"] == "3 Read Growth CAT"] <- "Read Growth CAT"
EL_Level["Test Name"][EL_Level["Test Name"] == "4 Math Growth CAT"] <- "Math Growth CAT"
EL_Level["Test Name"][EL_Level["Test Name"] == "4 Read Growth CAT"] <- "Read Growth CAT"
EL_Level["Test Name"][EL_Level["Test Name"] == "5 Math Growth CAT"] <- "Math Growth CAT"
EL_Level["Test Name"][EL_Level["Test Name"] == "5 Read Growth CAT"] <- "Read Growth CAT"
View(EL_Level)
EL_Level[ , c("Division Name", "Division Code", "School Name", "School Code", "Local Use Data -Test", "Test Administration-Time of Year",
"Test Administration-Year", "Level", "Form", "Subject Code", "Core/Admin", "Year of Standard", "UIN", "Online Test", "UUID",
"Z indicates End of Record")] <- list(NULL)
View(EL_Level)
which(colSums(is.na(EL_Level)) > 0)
unique(EL_Level$"Group Name")
EL_Level["Group Name"][EL_Level["Group Name"] == "FA PerryS"] <- "Perry"
EL_Level["Group Name"][EL_Level["Group Name"] == "WI PerryS"] <- "Perry"
EL_Level["Group Name"][EL_Level["Group Name"] == "FA JardelR"] <- "Jardel"
EL_Level["Group Name"][EL_Level["Group Name"] == "WI JardelR"] <- "Jardel"
EL_Level["Group Name"][EL_Level["Group Name"] == "FA FlisJ"] <- "Flis"
EL_Level["Group Name"][EL_Level["Group Name"] == "FA BojarczukC"] <- "Bojarczuk"
EL_Level["Group Name"][EL_Level["Group Name"] == "WI BojarczukC"] <- "Bojarczuk"
EL_Level["Group Name"][EL_Level["Group Name"] == "WI SteenK"] <- "Steen"
EL_Level["Group Name"][EL_Level["Group Name"] == "WI JohnsonW"] <- "Johnson"
EL_Level["Group Name"][EL_Level["Group Name"] == "FA ThriftM"] <- "Thrift"
EL_Level["Group Name"][EL_Level["Group Name"] == "WI ThriftM"] <- "Thrift"
EL_Level["Group Name"][EL_Level["Group Name"] == "FA ConlanS"] <- "Conlan"
EL_Level["Group Name"][EL_Level["Group Name"] == "WI ConlanS"] <- "Conlan"
EL_Level["Group Name"][EL_Level["Group Name"] == "FA GrantB"] <- "Grant"
EL_Level["Group Name"][EL_Level["Group Name"] == "WI GrantB"] <- "Grant"
EL_Level["Group Name"][EL_Level["Group Name"] == "FA BreuerE"] <- "Breuer"
EL_Level["Group Name"][EL_Level["Group Name"] == "WI BreuerE"] <- "Breuer"
EL_Level["Group Name"][EL_Level["Group Name"] == "FA CampbellS"] <- "Campbell"
EL_Level["Group Name"][EL_Level["Group Name"] == "WI CampbellS"] <- "Campbell"
EL_Level["Group Name"][EL_Level["Group Name"] == "FA PeoplesN"] <- "Peoples"
EL_Level["Group Name"][EL_Level["Group Name"] == "WI PeoplesN"] <- "Peoples"
EL_Level["Group Name"][EL_Level["Group Name"] == "FA WittM"] <- "Witt"
EL_Level["Group Name"][EL_Level["Group Name"] == "FA FickT"] <- "Fick"
EL_Level["Group Name"][EL_Level["Group Name"] == "WI FickT"] <- "Fick"
View(EL_Level)
write.csv(EL_Level, "NewestEL_Level.csv")
Disability_Status <- VGAdata[VGAdata$"Disability Status" > 0, ]
View(Disability_Status)
write.csv(Disability_Status, "Disability_Status.csv")
unique(Disability_Status$"Group Name")
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA SteenK"] <- "Steen"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI SteenK"] <- "Steen"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA JohnsonW"] <- "Johnson"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI JohnsonW"] <- "Johnson"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA BojarczukC"] <- "Bojarczuk"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI BojarczukC"] <- "Bojarczuk"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA JardelR"] <- "Jardel"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI JardelR"] <- "Jardel"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA PerryS"] <- "Perry"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI PerryS"] <- "Perry"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA FlisJ"] <- "Flis"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA ThorpK"] <- "Thorp"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI ThorpK"] <- "Thorp"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA GrantB"] <- "Grant"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI GrantB"] <- "Grant"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA ConlanS"] <- "Conlan"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI ConlanS"] <- "Conlan"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA PeoplesN"] <- "Peoples"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI PeoplesN"] <- "Peoples"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA ThriftM"] <- "Thrift"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI ThriftM"] <- "Thrift"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA FickT"] <- "Fick"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI FickT"] <- "Fick"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA MozingoS"] <- "Mozingo"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI MozingoS"] <- "Mozingo"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA RimkusJ"] <- "Rimkus"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI RimkusJ"] <- "Rimkus"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA WittM"] <- "Witt"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA CampbellS"] <- "Campbell"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI CampbellS"] <- "Campbell"
View(Disability_Status)
colnames(x = Disability_Status)
which(colSums(is.na(Disability_Status)) > 0)
Disability_Status[ , c("Division Name", "Division Code", "School Name", "School Code", "Local Use Data -Test", "Test Administration-Time of Year",
"Test Administration-Year", "Level", "Form", "Subject Code", "Core/Admin", "Year of Standard", "UIN", "Online Test", "UUID",
"Z indicates End of Record")] <- list(NULL)
View(Disability_Status)
write.csv(Disability_Status, "Disability_Status.csv")
ggscatter(EL_Level,
x = "EL Overall Proficiency Level",
y = "Vertical Scaled Score",
add = "reg.line",
conf.int = TRUE,
cor.coef = TRUE,
cor.method = "pearson",
xlab = "ESL Proficiency Level",
ylab = "Vertical Scaled Score")
ggscatter(VGAdata,
x = "Race",
y = "Vertical Scaled Score",
add = "reg.line",
conf.int = TRUE,
cor.coef = TRUE,
cor.method = "pearson",
xlab = "Race",
ylab = "Vertical Scaled Score")
ggscatter(Disability_Status,
x = "Disability Status",
y = "Vertical Scaled Score",
add = "reg.line",
conf.int = TRUE,
cor.coef = TRUE,
cor.method = "pearson",
xlab = "Disability Status",
ylab = "Vertical Scaled Score")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(data.table)
library(dplyr)
library(ggpubr)
VGAdata <- read_csv("C:/Users/Logan/OneDrive/Desktop/VGA Analysis/Raw VGA Scores/Winter VGA Scores.csv")
View(VGAdata)
head(x = VGAdata)
colnames(x = VGAdata)
VGAdata[ , c("Filler...7", "Filler...11", "Filler...22", "Filler...25", "Filler...34", "Filler...35", "Filler...37", "Filler...40", "Filler...41", "Filler...42", "Filler...47", "Filler...48", "Filler...49", "Filler...50", "Filler...51", "Filler...52", "Filler...53", "Filler...54", "Filler...55", "Filler...57", "Filler...59", "Filler...62", "Filler...63", "Filler...64", "Filler...65", "Filler...66", "Filler...67", "Filler...71", "Filler...73", "Filler...74", "Filler...76", "Filler...86", "Filler...91", "Filler...93", "Filler...95", "Filler...96", "Filler...97", "Filler...98", "Filler...99", "Filler...100", "Filler...101", "Filler...111", "Filler...113", "Filler...115", "Filler...116", "Filler...117", "Filler...126", "Filler...127", "Filler...128", "Filler...152", "Filler...153", "Filler...154", "Filler...159", "Filler...162")] <- list(NULL)
colnames(x = VGAdata)
VGAdata[ , c("Z indicates End of Record", "STA-B", "Code VTLN", "Code TLN", "Code TFN", "Performance Level", "Reporting Cat Scaled Score 1",
"Reporting Cat Scaled Score 2", "Reporting Cat Scaled Score 3", "Reporting Cat Scaled Score 4", "Reporting Cat Scaled Score 5",
"Reporting Cat Scaled Score 6", "Reporting Cat Scaled Score 7", "Test Scaled Score", "Testing Status", "Z-Code-G", "Z-Code-F", "Z-Code-E", "SLIFE",
"Recovery", "Retest", "Recently Arrived EL", "X-Code-D", "X-Code-C", "X-Code-B", "Foster Care", "Local Use Data - Student", "Virtual Virginia",
"Temp Condition", "Resident Division", "Transfer", "SOA Adjustment - EL", "Middle Initial", "Group Code", "Student Test Day", "Form", "Level", "Core/Admin", "Year of Standard",              "Test Administration-Time of Year", "Test Administration-Year", "Sequence Number", "Document ID", "Batch Number")] <- list(NULL)
colnames(x = VGAdata)
VGAdata["Disability Status"][is.na(VGAdata["Disability Status"])] <- 0
View(VGAdata)
VGAdata["Primary Nighttime Residence Code"][is.na(VGAdata["Primary Nighttime Residence Code"])] <- 0
View(VGAdata)
VGAdata["Formerly EL"][is.na(VGAdata["Formerly EL"])] <- 0
VGAdata$"Formerly EL"[VGAdata$"Formerly EL" > 0] <- 1
View(VGAdata)
VGAdata[ , c("EL Overall Proficiency Level")] <- list(NULL)
View(VGAdata)
VGAdata["Stack Number"][is.na(VGAdata["Stack Number"])] <- 0
View(VGAdata)
VGAdata["Revision"][VGAdata["Revision"] == 0] <- 1
VGAdata["Revision"][is.na(VGAdata["Revision"])] <- 0
View(VGAdata)
VGAdata["Items Blank &/or Mult Marked"][VGAdata["Items Blank &/or Mult Marked"] == 0] <- 1
VGAdata["Items Blank &/or Mult Marked"][is.na(VGAdata["Items Blank &/or Mult Marked"])] <- 0
View(VGAdata)
VGAdata["Test Name"][VGAdata["Test Name"] == "4 Math Growth"] <- "4 Math Growth CAT"
VGAdata["Test Name"][VGAdata["Test Name"] == "4 Read Growth"] <- "4 Read Growth CAT"
View(VGAdata)
VGAdata["Test Name"][VGAdata["Test Name"] == "3 Math Growth CAT"] <- "Math Growth CAT"
VGAdata["Test Name"][VGAdata["Test Name"] == "3 Read Growth CAT"] <- "Read Growth CAT"
VGAdata["Test Name"][VGAdata["Test Name"] == "4 Math Growth CAT"] <- "Math Growth CAT"
VGAdata["Test Name"][VGAdata["Test Name"] == "4 Read Growth CAT"] <- "Read Growth CAT"
VGAdata["Test Name"][VGAdata["Test Name"] == "5 Math Growth CAT"] <- "Math Growth CAT"
VGAdata["Test Name"][VGAdata["Test Name"] == "5 Read Growth CAT"] <- "Read Growth CAT"
View(VGAdata)
which(colSums(is.na(VGAdata)) > 0)
VGAdata["Student Number"][is.na(VGAdata["Student Number"])] <- 697550
VGAdata["Local Use Data -Test"][is.na(VGAdata["Local Use Data -Test"])] <- "SRI"
VGAdata["Online Test"][is.na(VGAdata["Online Test"])] <- "N"
VGAdata[is.na(VGAdata)] <- "N"
write.csv(VGAdata, "NewestVGAdata.csv")
library(readr)
FormerlyEL <- read_csv("Useable Files/FormerlyEL.csv")
View(FormerlyEL)
colnames(x = FormerlyEL)
which(colSums(is.na(FormerlyEL)) > 0)
FormerlyEL[ , c("Primary Nighttime Residence Code", "EL Overall Proficiency Level", "Stack Number", "Batch Number",
"Sequence Number", "Document ID", "Revision", "Items Blank &/or Mult Marked")] <- list(NULL)
View(FormerlyEL)
FormerlyEL["Test Name"][FormerlyEL["Test Name"] == "3 Math Growth CAT"] <- "Math Growth CAT"
FormerlyEL["Test Name"][FormerlyEL["Test Name"] == "3 Read Growth CAT"] <- "Read Growth CAT"
FormerlyEL["Test Name"][FormerlyEL["Test Name"] == "4 Math Growth CAT"] <- "Math Growth CAT"
FormerlyEL["Test Name"][FormerlyEL["Test Name"] == "4 Read Growth CAT"] <- "Read Growth CAT"
FormerlyEL["Test Name"][FormerlyEL["Test Name"] == "5 Math Growth CAT"] <- "Math Growth CAT"
FormerlyEL["Test Name"][FormerlyEL["Test Name"] == "5 Read Growth CAT"] <- "Read Growth CAT"
View(FormerlyEL)
FormerlyEL[ , c("Local Use Data -Test", "Test Administration-Time of Year", "Test Administration-Year", "Stack Number", "Batch Number", "Sequence Number", "Document ID", "Level", "Form", "Subject Code", "Core/Admin", "Year of Standard", "UIN", "UUID", "Z indicates End of Record")] <- list(NULL)
View(FormerlyEL)
write.csv(FormerlyEL, "NewestFormerlyEL.csv")
EL_Level <- read_csv("Useable FIles/EL_Level.csv")
View(EL_Level)
colnames(x = EL_Level)
which(colSums(is.na(EL_Level)) > 0)
EL_Level[ , c("Primary Nighttime Residence Code", "Stack Number", "Batch Number", "Sequence Number",
"Document ID", "Revision", "Formerly EL", "Items Blank &/or Mult Marked")] <- list(NULL)
View(EL_Level)
EL_Level["Test Name"][EL_Level["Test Name"] == "3 Math Growth CAT"] <- "Math Growth CAT"
EL_Level["Test Name"][EL_Level["Test Name"] == "3 Read Growth CAT"] <- "Read Growth CAT"
EL_Level["Test Name"][EL_Level["Test Name"] == "4 Math Growth CAT"] <- "Math Growth CAT"
EL_Level["Test Name"][EL_Level["Test Name"] == "4 Read Growth CAT"] <- "Read Growth CAT"
EL_Level["Test Name"][EL_Level["Test Name"] == "5 Math Growth CAT"] <- "Math Growth CAT"
EL_Level["Test Name"][EL_Level["Test Name"] == "5 Read Growth CAT"] <- "Read Growth CAT"
View(EL_Level)
EL_Level[ , c("Division Name", "Division Code", "School Name", "School Code", "Local Use Data -Test", "Test Administration-Time of Year",
"Test Administration-Year", "Level", "Form", "Subject Code", "Core/Admin", "Year of Standard", "UIN", "Online Test", "UUID",
"Z indicates End of Record")] <- list(NULL)
View(EL_Level)
which(colSums(is.na(EL_Level)) > 0)
unique(EL_Level$"Group Name")
EL_Level["Group Name"][EL_Level["Group Name"] == "FA PerryS"] <- "Perry"
EL_Level["Group Name"][EL_Level["Group Name"] == "WI PerryS"] <- "Perry"
EL_Level["Group Name"][EL_Level["Group Name"] == "FA JardelR"] <- "Jardel"
EL_Level["Group Name"][EL_Level["Group Name"] == "WI JardelR"] <- "Jardel"
EL_Level["Group Name"][EL_Level["Group Name"] == "FA FlisJ"] <- "Flis"
EL_Level["Group Name"][EL_Level["Group Name"] == "FA BojarczukC"] <- "Bojarczuk"
EL_Level["Group Name"][EL_Level["Group Name"] == "WI BojarczukC"] <- "Bojarczuk"
EL_Level["Group Name"][EL_Level["Group Name"] == "WI SteenK"] <- "Steen"
EL_Level["Group Name"][EL_Level["Group Name"] == "WI JohnsonW"] <- "Johnson"
EL_Level["Group Name"][EL_Level["Group Name"] == "FA ThriftM"] <- "Thrift"
EL_Level["Group Name"][EL_Level["Group Name"] == "WI ThriftM"] <- "Thrift"
EL_Level["Group Name"][EL_Level["Group Name"] == "FA ConlanS"] <- "Conlan"
EL_Level["Group Name"][EL_Level["Group Name"] == "WI ConlanS"] <- "Conlan"
EL_Level["Group Name"][EL_Level["Group Name"] == "FA GrantB"] <- "Grant"
EL_Level["Group Name"][EL_Level["Group Name"] == "WI GrantB"] <- "Grant"
EL_Level["Group Name"][EL_Level["Group Name"] == "FA BreuerE"] <- "Breuer"
EL_Level["Group Name"][EL_Level["Group Name"] == "WI BreuerE"] <- "Breuer"
EL_Level["Group Name"][EL_Level["Group Name"] == "FA CampbellS"] <- "Campbell"
EL_Level["Group Name"][EL_Level["Group Name"] == "WI CampbellS"] <- "Campbell"
EL_Level["Group Name"][EL_Level["Group Name"] == "FA PeoplesN"] <- "Peoples"
EL_Level["Group Name"][EL_Level["Group Name"] == "WI PeoplesN"] <- "Peoples"
EL_Level["Group Name"][EL_Level["Group Name"] == "FA WittM"] <- "Witt"
EL_Level["Group Name"][EL_Level["Group Name"] == "FA FickT"] <- "Fick"
EL_Level["Group Name"][EL_Level["Group Name"] == "WI FickT"] <- "Fick"
View(EL_Level)
write.csv(EL_Level, "NewestEL_Level.csv")
Disability_Status <- VGAdata[VGAdata$"Disability Status" > 0, ]
View(Disability_Status)
write.csv(Disability_Status, "Disability_Status.csv")
unique(Disability_Status$"Group Name")
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA SteenK"] <- "Steen"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI SteenK"] <- "Steen"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA JohnsonW"] <- "Johnson"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI JohnsonW"] <- "Johnson"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA BojarczukC"] <- "Bojarczuk"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI BojarczukC"] <- "Bojarczuk"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA JardelR"] <- "Jardel"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI JardelR"] <- "Jardel"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA PerryS"] <- "Perry"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI PerryS"] <- "Perry"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA FlisJ"] <- "Flis"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA ThorpK"] <- "Thorp"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI ThorpK"] <- "Thorp"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA GrantB"] <- "Grant"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI GrantB"] <- "Grant"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA ConlanS"] <- "Conlan"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI ConlanS"] <- "Conlan"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA PeoplesN"] <- "Peoples"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI PeoplesN"] <- "Peoples"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA ThriftM"] <- "Thrift"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI ThriftM"] <- "Thrift"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA FickT"] <- "Fick"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI FickT"] <- "Fick"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA MozingoS"] <- "Mozingo"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI MozingoS"] <- "Mozingo"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA RimkusJ"] <- "Rimkus"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI RimkusJ"] <- "Rimkus"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA WittM"] <- "Witt"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "FA CampbellS"] <- "Campbell"
Disability_Status["Group Name"][Disability_Status["Group Name"] == "WI CampbellS"] <- "Campbell"
View(Disability_Status)
colnames(x = Disability_Status)
which(colSums(is.na(Disability_Status)) > 0)
Disability_Status[ , c("Division Name", "Division Code", "School Name", "School Code", "Local Use Data -Test", "Test Administration-Time of Year",
"Test Administration-Year", "Level", "Form", "Subject Code", "Core/Admin", "Year of Standard", "UIN", "Online Test", "UUID",
"Z indicates End of Record")] <- list(NULL)
View(Disability_Status)
write.csv(Disability_Status, "Disability_Status.csv")
ggscatter(EL_Level,
x = "EL Overall Proficiency Level",
y = "Vertical Scaled Score",
add = "reg.line",
conf.int = TRUE,
cor.coef = TRUE,
cor.method = "pearson",
xlab = "ESL Proficiency Level",
ylab = "Vertical Scaled Score")
ggscatter(VGAdata,
x = "Race",
y = "Vertical Scaled Score",
add = "reg.line",
conf.int = TRUE,
cor.coef = TRUE,
cor.method = "pearson",
xlab = "Race",
ylab = "Vertical Scaled Score")
ggscatter(Disability_Status,
x = "Disability Status",
y = "Vertical Scaled Score",
add = "reg.line",
conf.int = TRUE,
cor.coef = TRUE,
cor.method = "pearson",
xlab = "Disability Status",
ylab = "Vertical Scaled Score")
